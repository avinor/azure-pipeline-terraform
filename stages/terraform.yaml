# Plan and apply terraform resources
# Uses tau for deployment
#
# Azure Hosted Agent did not have terraform 0.12 at the time of creation and therefore
# installing terraform 0.12
#
# Azure release pipeline does not support manual intervention at this time. This is
# recommended way to deploy terraform to allow inspection of plans. To work around this
# the apply stage only runs on master. So make changes in branches and inspect them
# before merging to master
#
# Nb. Due to a bug it could not use the install tau and terraform step templates
#     and had to include those in deployment steps directly. Maybe will be fixed later

parameters:
  azureSubscription: ''
  environment: ''
  paths: []
  terraformVersion: '0.12.6'
  tauVersion: 'v0.1.0-alpha.2'

stages:
- stage: Plan
  jobs:
  - ${{ each path in parameters.paths }}:
    - job: ${{ path.name }}
      displayName: ${{ path.displayName }}
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
      - checkout: self
        clean: false
        fetchDepth: 5
        lfs: true
        path: ${{ path.name }}
      - template: ../steps/terraform-install.yaml
        parameters:
          terraformVersion: ${{ parameters.terraformVersion }}
      - template: ../steps/tau-install.yaml
      - task: AzureCLI@1
        displayName: 'Run Tau Init'
        inputs:
          azureSubscription: ${{ parameters.azureSubscription }}
          scriptLocation: inlineScript
          inlineScript: |
            export ARM_CLIENT_ID=$servicePrincipalId
            export ARM_CLIENT_SECRET=$servicePrincipalKey
            export ARM_TENANT_ID=$(az account show | jq -r .tenantId)
            
            cd $(Agent.BuildDirectory)/${{ path.name }}/${{ path.path }}
            tau init
          addSpnToEnvironment: true
          useGlobalConfig: true
      - task: AzureCLI@1
        displayName: 'Run Tau Plan'
        inputs:
          azureSubscription: ${{ parameters.azureSubscription }}
          scriptLocation: inlineScript
          inlineScript: |
            export ARM_CLIENT_ID=$servicePrincipalId
            export ARM_CLIENT_SECRET=$servicePrincipalKey
            export ARM_TENANT_ID=$(az account show | jq -r .tenantId)
            
            cd $(Agent.BuildDirectory)/${{ path.name }}/${{ path.path }}
            tau plan
          addSpnToEnvironment: true
          useGlobalConfig: true
- stage: Apply
  jobs:
  - ${{ each path in parameters.paths }}:
    - deployment: ${{ path.name }}
      displayName: ${{ path.displayName }}
      pool:
        vmImage: 'ubuntu-16.04'
      environment: ${{ parameters.environment }}
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self
              clean: false
              fetchDepth: 5
              lfs: true
              path: ${{ path.name }}
            # Should be like this... but just fails.
            # - template: ../steps/terraform-install.yaml
            # - template: ../steps/tau-install.yaml
            - script: |
                curl -LO "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
                sudo unzip -o "terraform_${TERRAFORM_VERSION}_linux_amd64.zip" -d /usr/local/bin
                rm -f "terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
              env:
                TERRAFORM_VERSION: ${{ parameters.terraformVersion }}
              displayName: Install terraform
            - script: |
                curl -L https://github.com/avinor/tau/releases/download/${TAU_VERSION}/tau-${TAU_VERSION}-linux-amd64 --output tau
                chmod +x tau
                sudo mv tau /usr/local/bin
              env:
                TAU_VERSION: ${{ parameters.tauVersion }}
              displayName: Install tau
            - task: AzureCLI@1
              displayName: 'Run Tau Init'
              inputs:
                azureSubscription: ${{ parameters.azureSubscription }}
                scriptLocation: inlineScript
                inlineScript: |
                  export ARM_CLIENT_ID=$servicePrincipalId
                  export ARM_CLIENT_SECRET=$servicePrincipalKey
                  export ARM_TENANT_ID=$(az account show | jq -r .tenantId)
                  
                  cd $(Agent.BuildDirectory)/${{ path.name }}/${{ path.path }}
                  tau init
                addSpnToEnvironment: true
                useGlobalConfig: true
            - task: AzureCLI@1
              displayName: 'Run Tau Apply'
              inputs:
                azureSubscription: ${{ parameters.azureSubscription }}
                scriptLocation: inlineScript
                inlineScript: |
                  export ARM_CLIENT_ID=$servicePrincipalId
                  export ARM_CLIENT_SECRET=$servicePrincipalKey
                  export ARM_TENANT_ID=$(az account show | jq -r .tenantId)
                  
                  cd $(Agent.BuildDirectory)/${{ path.name }}/${{ path.path }}
                  tau apply --auto-approve
                addSpnToEnvironment: true
                useGlobalConfig: true
