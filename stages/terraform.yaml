parameters:
  azureSubscription: ''
  environment: ''
  locations: []
  terragruntVersion: 'v0.18.4'
  terraformVersion: '0.12.0'

stages:
- stage: Plan
  jobs:
  - ${{ each location in parameters.locations }}:
    - job: ${{ location }}
      displayName: ${{ location }}
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
      - checkout: self
        clean: false
        fetchDepth: 5
        lfs: true
        path: ${{ location }}
      - template: ../steps/terraform-install.yaml
      - template: ../steps/terragrunt-install.yaml
      - task: AzureCLI@1
        displayName: 'Run Terragrunt Plan'
        inputs:
          azureSubscription: ${{ parameters.azureSubscription }}
          scriptLocation: inlineScript
          inlineScript: |
            export ARM_CLIENT_ID=$servicePrincipalId
            export ARM_CLIENT_SECRET=$servicePrincipalKey
            export ARM_TENANT_ID=$(az account show | jq -r .tenantId)
            export LOCATION="${{ location }}"
            
            cd $(Agent.BuildDirectory)/${{ location }}/environments/${{ parameters.environment }}/$(echo ${LOCATION,,})
            . ../../../scripts/setAccessKeys.sh ${{ parameters.environment }}
            terragrunt plan-all -input=false
          addSpnToEnvironment: true
          useGlobalConfig: true
- stage: Apply
  jobs:
  - ${{ each location in parameters.locations }}:
    - deployment: ${{ location }}
      displayName: ${{ location }}
      pool:
        vmImage: 'ubuntu-16.04'
      environment: ${{ parameters.environment }}
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      strategy:
        runOnce:
          deploy:
            steps:
            - checkout: self
              clean: false
              fetchDepth: 5
              lfs: true
              path: ${{ location }}
            # Should be like this... but just fails.
            # - template: ../steps/terraform-install.yaml
            # - template: ../steps/terragrunt-install.yaml
            - script: |
                curl -LO "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
                sudo unzip -o "terraform_${TERRAFORM_VERSION}_linux_amd64.zip" -d /usr/local/bin
                rm -f "terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
              env:
                TERRAFORM_VERSION: ${{ parameters.terraformVersion }}
              displayName: Install terraform
            - script: |
                curl -L https://github.com/gruntwork-io/terragrunt/releases/download/${TERRAGRUNT_VERSION}/terragrunt_linux_amd64 --output terragrunt
                chmod +x terragrunt
                sudo mv terragrunt /usr/local/bin
              env:
                TERRAGRUNT_VERSION: ${{ parameters.terragruntVersion }}
              displayName: Install terragrunt
            - task: AzureCLI@1
              displayName: 'Run Terragrunt Apply'
              inputs:
                azureSubscription: ${{ parameters.azureSubscription }}
                scriptLocation: inlineScript
                inlineScript: |
                  export ARM_CLIENT_ID=$servicePrincipalId
                  export ARM_CLIENT_SECRET=$servicePrincipalKey
                  export ARM_TENANT_ID=$(az account show | jq -r .tenantId)
                  export LOCATION="${{ location }}"
                  
                  cd $(Agent.BuildDirectory)/${{ location }}/environments/${{ parameters.environment }}/$(echo ${LOCATION,,})
                  . ../../../scripts/setAccessKeys.sh ${{ parameters.environment }}
                  terragrunt apply-all -input=false --terragrunt-non-interactive
                addSpnToEnvironment: true
                useGlobalConfig: true
